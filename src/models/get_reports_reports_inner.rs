/*
 * SendinBlue API
 *
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetReportsReportsInner {
    /// Date of the statistics
    #[serde(rename = "date")]
    pub date: String,
    /// Number of requests for the date
    #[serde(rename = "requests")]
    pub requests: i64,
    /// Number of delivered emails for the date
    #[serde(rename = "delivered")]
    pub delivered: i64,
    /// Number of hardbounces for the date
    #[serde(rename = "hardBounces")]
    pub hard_bounces: i64,
    /// Number of softbounces for the date
    #[serde(rename = "softBounces")]
    pub soft_bounces: i64,
    /// Number of clicks for the date
    #[serde(rename = "clicks")]
    pub clicks: i64,
    /// Number of unique clicks for the date
    #[serde(rename = "uniqueClicks")]
    pub unique_clicks: i64,
    /// Number of openings for the date
    #[serde(rename = "opens")]
    pub opens: i64,
    /// Number of unique openings for the date
    #[serde(rename = "uniqueOpens")]
    pub unique_opens: i64,
    /// Number of complaints (spam reports) for the date
    #[serde(rename = "spamReports")]
    pub spam_reports: i64,
    /// Number of blocked emails for the date
    #[serde(rename = "blocked")]
    pub blocked: i64,
    /// Number of invalid emails for the date
    #[serde(rename = "invalid")]
    pub invalid: i64,
    /// Number of unsubscribed emails for the date
    #[serde(rename = "unsubscribed")]
    pub unsubscribed: i64,
}

impl GetReportsReportsInner {
    pub fn new(date: String, requests: i64, delivered: i64, hard_bounces: i64, soft_bounces: i64, clicks: i64, unique_clicks: i64, opens: i64, unique_opens: i64, spam_reports: i64, blocked: i64, invalid: i64, unsubscribed: i64) -> GetReportsReportsInner {
        GetReportsReportsInner {
            date,
            requests,
            delivered,
            hard_bounces,
            soft_bounces,
            clicks,
            unique_clicks,
            opens,
            unique_opens,
            spam_reports,
            blocked,
            invalid,
            unsubscribed,
        }
    }
}


