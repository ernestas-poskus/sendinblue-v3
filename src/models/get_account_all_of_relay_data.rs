/*
 * SendinBlue API
 *
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 * Generated by: https://openapi-generator.tech
 */

/// GetAccountAllOfRelayData : Data regarding the transactional email account



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetAccountAllOfRelayData {
    /// Email to use as login on transactional platform
    #[serde(rename = "userName")]
    pub user_name: String,
    /// URL of the SMTP Relay
    #[serde(rename = "relay")]
    pub relay: String,
    /// Port used for SMTP Relay
    #[serde(rename = "port")]
    pub port: i32,
}

impl GetAccountAllOfRelayData {
    /// Data regarding the transactional email account
    pub fn new(user_name: String, relay: String, port: i32) -> GetAccountAllOfRelayData {
        GetAccountAllOfRelayData {
            user_name,
            relay,
            port,
        }
    }
}


