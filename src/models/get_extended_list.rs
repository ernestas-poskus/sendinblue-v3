/*
 * SendinBlue API
 *
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetExtendedList {
    /// ID of the list
    #[serde(rename = "id")]
    pub id: i64,
    /// Name of the list
    #[serde(rename = "name")]
    pub name: String,
    /// Number of blacklisted contacts in the list
    #[serde(rename = "totalBlacklisted")]
    pub total_blacklisted: i64,
    /// Number of contacts in the list
    #[serde(rename = "totalSubscribers")]
    pub total_subscribers: i64,
    /// ID of the folder
    #[serde(rename = "folderId")]
    pub folder_id: i64,
    /// Creation UTC date-time of the list (YYYY-MM-DDTHH:mm:ss.SSSZ)
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "campaignStats", skip_serializing_if = "Option::is_none")]
    pub campaign_stats: Option<Vec<crate::models::GetExtendedListAllOfCampaignStats>>,
    /// Status telling if the list is dynamic or not (true=dynamic, false=not dynamic)
    #[serde(rename = "dynamicList", skip_serializing_if = "Option::is_none")]
    pub dynamic_list: Option<bool>,
}

impl GetExtendedList {
    pub fn new(id: i64, name: String, total_blacklisted: i64, total_subscribers: i64, folder_id: i64, created_at: String) -> GetExtendedList {
        GetExtendedList {
            id,
            name,
            total_blacklisted,
            total_subscribers,
            folder_id,
            created_at,
            campaign_stats: None,
            dynamic_list: None,
        }
    }
}


