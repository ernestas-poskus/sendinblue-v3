/*
 * SendinBlue API
 *
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ErrorModel {
    /// Error code displayed in case of a failure
    #[serde(rename = "code")]
    pub code: Code,
    /// Readable message associated to the failure
    #[serde(rename = "message")]
    pub message: String,
}

impl ErrorModel {
    pub fn new(code: Code, message: String) -> ErrorModel {
        ErrorModel {
            code,
            message,
        }
    }
}

/// Error code displayed in case of a failure
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Code {
    #[serde(rename = "invalid_parameter")]
    InvalidParameter,
    #[serde(rename = "missing_parameter")]
    MissingParameter,
    #[serde(rename = "out_of_range")]
    OutOfRange,
    #[serde(rename = "campaign_processing")]
    CampaignProcessing,
    #[serde(rename = "campaign_sent")]
    CampaignSent,
    #[serde(rename = "document_not_found")]
    DocumentNotFound,
    #[serde(rename = "reseller_permission_denied")]
    ResellerPermissionDenied,
    #[serde(rename = "not_enough_credits")]
    NotEnoughCredits,
    #[serde(rename = "permission_denied")]
    PermissionDenied,
    #[serde(rename = "duplicate_parameter")]
    DuplicateParameter,
    #[serde(rename = "duplicate_request")]
    DuplicateRequest,
    #[serde(rename = "method_not_allowed")]
    MethodNotAllowed,
    #[serde(rename = "unauthorized")]
    Unauthorized,
    #[serde(rename = "account_under_validation")]
    AccountUnderValidation,
    #[serde(rename = "not_acceptable")]
    NotAcceptable,
}

impl Default for Code {
    fn default() -> Code {
        Self::InvalidParameter
    }
}

