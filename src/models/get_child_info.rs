/*
 * SendinBlue API
 *
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetChildInfo {
    /// Login Email
    #[serde(rename = "email")]
    pub email: String,
    /// First Name
    #[serde(rename = "firstName")]
    pub first_name: String,
    /// Last Name
    #[serde(rename = "lastName")]
    pub last_name: String,
    /// Name of the company
    #[serde(rename = "companyName")]
    pub company_name: String,
    #[serde(rename = "credits", skip_serializing_if = "Option::is_none")]
    pub credits: Option<Box<crate::models::GetChildInfoAllOfCredits>>,
    #[serde(rename = "statistics", skip_serializing_if = "Option::is_none")]
    pub statistics: Option<Box<crate::models::GetChildInfoAllOfStatistics>>,
    /// The encrypted password of child account
    #[serde(rename = "password")]
    pub password: String,
    /// IP(s) associated to a child account user
    #[serde(rename = "ips", skip_serializing_if = "Option::is_none")]
    pub ips: Option<Vec<String>>,
    #[serde(rename = "apiKeys", skip_serializing_if = "Option::is_none")]
    pub api_keys: Option<Box<crate::models::GetChildInfoAllOfApiKeys>>,
}

impl GetChildInfo {
    pub fn new(email: String, first_name: String, last_name: String, company_name: String, password: String) -> GetChildInfo {
        GetChildInfo {
            email,
            first_name,
            last_name,
            company_name,
            credits: None,
            statistics: None,
            password,
            ips: None,
            api_keys: None,
        }
    }
}


